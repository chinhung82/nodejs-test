{
  "name": "import-jsx",
  "version": "2.0.0",
  "description": "Require and transpile JSX on the fly",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "vadimdemedes/import-jsx"
  },
  "author": {
    "name": "Vadim Demedes",
    "email": "vdemedes@gmail.com",
    "url": "github.com/vadimdemedes"
  },
  "engines": {
    "node": ">= 4"
  },
  "scripts": {
    "test": "xo && nyc --check-coverage --branches=100 --lines=100 --functions=100 --statements=100 ava"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "react",
    "jsx",
    "require",
    "require-jsx",
    "import"
  ],
  "dependencies": {
    "babel-core": "^6.25.0",
    "babel-plugin-transform-es2015-destructuring": "^6.23.0",
    "babel-plugin-transform-object-rest-spread": "^6.23.0",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "caller-path": "^2.0.0",
    "resolve-from": "^3.0.0"
  },
  "devDependencies": {
    "ava": "^0.19.1",
    "nyc": "^13.3.0",
    "sinon": "^2.3.5",
    "xo": "^0.18.2"
  },
  "readme": "# import-jsx [![Build Status](https://travis-ci.org/vadimdemedes/import-jsx.svg?branch=master)](https://travis-ci.org/vadimdemedes/import-jsx)\n\n> Require and transpile JSX on the fly\n\n- Doesn't install any `require()` hooks\n- Auto-detects React pragma (`React.createElement`) and falls back to `h` pragma supported by Preact and others\n- Caches transpiled sources by default\n- Bundles in [object rest spread](https://babeljs.io/docs/plugins/transform-object-rest-spread/) transform\n\n\n## Install\n\n```\n$ npm install --save import-jsx\n```\n\n\n## Usage\n\n```js\nconst importJsx = require('import-jsx');\n\nconst reactComponent = importJsx('./react');\nconst preactComponent = importJsx('./preact');\nconst customComponent = importJsx('./custom', {pragma: 'x'});\n```\n\n**react.js**\n\n```jsx\nconst React = require('react');\n\nmodule.exports = <div/>;\n```\n\n**preact.js**\n\n```jsx\nconst {h} = require('preact');\n\nmodule.exports = <div/>;\n```\n\n**custom.js**\n\n```jsx\nconst x = (tagName, attrs, ...children) => {};\n\nmodule.exports = <div/>;\n```\n\n## API\n\n### importJsx(moduleId, [options])\n\n#### moduleId\n\nType: `string`\n\nModule id.\n\n#### options\n\n##### pragma\n\nType: `string`<br>\nDefault: `h`\n\nOverride [JSX pragma](https://jasonformat.com/wtf-is-jsx/).\n\n##### cache\n\nType: `boolean`<br>\nDefault: `true`\n\nEnable or disable caching of transpiled sources.\n\n### importJsx.create([options])\n\nFactory method to create a version of `importJsx()` with pre-defined options.\nUseful when you need a custom pragma, but don't want to pass it along with each `importJsx()` call.\n\n#### options\n\nType: `object`\n\nOptions to pass to `importJsx()`.\n\n```js\n// Before\nconst importJsx = require('import-jsx');\n\nimportJsx('./a', {pragma: 'x'});\nimportJsx('./b', {pragma: 'x'});\n\n// After\nconst importJsx = require('import-jsx').create({pragma: 'x'});\n\nimportJsx('./a');\nimportJsx('./b');\n```\n\n## License\n\nMIT Â© [Vadim Demedes](https://github.com/vadimdemedes)\n",
  "readmeFilename": "readme.md",
  "_id": "import-jsx@2.0.0",
  "_from": "import-jsx@^2.0.0"
}
